plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

version = '1.0.0'

dependencies {
    compile(
            project(':leo-api'),
            'com.amazonaws:amazon-kinesis-producer:0.12.9',
            'com.amazonaws:aws-java-sdk-s3:1.11.396',
            'com.fasterxml.jackson.core:jackson-core:2.9.6',
            'com.jcraft:jzlib:1.1.3',
            'com.amazonaws:aws-lambda-java-core:1.2.0',
            'com.amazonaws:aws-lambda-java-events:2.2.0'
    )
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.getDestinationDir()
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

test {
    useTestNG {
        useDefaultListeners = true
        failFast = true
        options.suites("src/test/resources/testng.xml")
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

publishing {
    publications {
        sdkAws(MavenPublication) {
            pom {
                name = 'LEO AWS SDK'
                description = 'AWS connector for LEO Insights platform'
                url = 'https://github.com/LeoPlatform/Java'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/LeoPlatform/Java/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'chamont'
                        name = 'Monty Charlton'
                        email = 'monty@fullmonty.org'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/LeoPlatform/Java.git'
                    developerConnection = 'scm:git:https://github.com/LeoPlatform/Java.git'
                    url = 'https://github.com/LeoPlatform/Java'
                }
            }
            from components.java
            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier = 'javadoc'
            }
        }
    }
    repositories {
        mavenLocal()
        maven {
            name = 'External'
            url external_url
            credentials {
                username external_user
                password external_password
            }
        }
        maven {
            name = 'Internal'
            url internal_url
            credentials {
                username internal_user
                password internal_password
            }
        }
    }
}

signing {
    sign configurations.archives
}
